{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\UI\\\\trydo\\\\src\\\\component\\\\Popups\\\\AddPopups\\\\AddProjectPopup.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core';\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\nimport { TextareaAutosize } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Popup(props) {\n  const {\n    openProjectAddPopup,\n    setOpenProjectAddPopup\n  } = props;\n  const [title, setTitle] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [projectType, setProjectType] = useState(\"\");\n  const [errormsg, setMessage] = useState(\"\"); //Edit WorkExperience Function\n\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {}\n  });\n\n  const AddProject = async setMsg => {\n    try {\n      var objectId = new ObjectID();\n      var originalHex = objectId.toHexString();\n      console.log(originalHex);\n      const add = {\n        id: originalHex\n      };\n\n      if (title) {\n        update.title = title;\n      } else {\n        update.title = \"Missing Title\";\n      }\n\n      if (description) {\n        update.description = description;\n      } else {\n        update.description = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\";\n      }\n\n      if (link) {\n        update.link = link;\n      } else {\n        update.link = \"No Link\";\n      }\n\n      if (imageUrl) {\n        update.imageUrl = imageUrl;\n      } else {\n        update.imageUrl = \"No Image\";\n      }\n\n      if (projectType) {\n        update.type = projectType;\n      } else {\n        update.type = \"Miscellaneous\";\n      }\n\n      await authAxios.put(`/Projects`, add);\n      setOpenProjectEditPopup(false);\n    } catch (err) {\n      console.log(err);\n      setMessage(err);\n    }\n  };\n\n  useEffect(() => {}, [setOpenProjectAddPopup]);\n  const classes = useStyles();\n\n  const test = e => {\n    e.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Dialog, {\n      open: openProjectAddPopup,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Add\"))),\n    /*#__PURE__*/\n    React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      id: \"Msg\",\n      className: classes.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, errormsg),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: test,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: '20px',\n        marginLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Add Project\"),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Title\",\n      label: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      id: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Link\",\n      label: \"Link\",\n      value: link,\n      onChange: e => setLink(e.target.value),\n      id: \"Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Type\",\n      label: \"Type\",\n      value: projectType,\n      onChange: e => setProjectType(e.target.value),\n      id: \"Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"ImageUrl\",\n      label: \"ImageUrl\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      id: \"ImageUrl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 12\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextareaAutosize, {\n      style: {\n        minWidth: \"500px\",\n        minHeight: \"100px\",\n        marginTop: \"30px\",\n        marginBottom: \"30px\"\n      },\n      onChange: e => setDescription(e.target.value),\n      value: description,\n      \"aria-label\": \"minimum height\",\n      placeholder: \"Enter your Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => AddProject(),\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, \"Save changes\"))),\n    /*#__PURE__*/\n    React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      onClick: () => setOpenProjectAddPopup(false),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, \"Close\")))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\UI\\trydo\\src\\component\\Popups\\AddPopups\\AddProjectPopup.js"],"names":["React","useState","useEffect","useRef","makeStyles","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","TextField","API_ENDPOINT","axios","TextareaAutosize","useStyles","theme","form","marginTop","spacing","Popup","props","openProjectAddPopup","setOpenProjectAddPopup","title","setTitle","link","setLink","description","setDescription","imageUrl","setImageUrl","projectType","setProjectType","errormsg","setMessage","authAxios","create","baseURL","headers","AddProject","setMsg","objectId","ObjectID","originalHex","toHexString","console","log","add","id","update","type","put","setOpenProjectEditPopup","err","classes","test","e","preventDefault","color","center","margin","marginLeft","target","value","minWidth","minHeight","marginBottom","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core'\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\nimport { TextareaAutosize } from '@material-ui/core'\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\nexport default function Popup(props) {\n\n  const { openProjectAddPopup, setOpenProjectAddPopup} = props\n  const [title, setTitle] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [projectType, setProjectType] = useState(\"\");\n\n\n  const [errormsg, setMessage] = useState(\"\");\n  //Edit WorkExperience Function\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n    },\n\n  });\n  const AddProject= async (setMsg) => {\n    try {\n      var objectId = new ObjectID();\n                var originalHex = objectId.toHexString();\n                console.log(originalHex);\n      const add = {\n        id: originalHex,\n      };\n      if (title) {\n        update.title = title\n      } else {\n        update.title = \"Missing Title\"\n      }\n      if (description) {\n        update.description = description\n      } else {\n        update.description = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n      }\n      if (link) {\n        update.link = link\n      } else {\n        update.link = \"No Link\"\n      }\n      if (imageUrl) {\n        update.imageUrl = imageUrl\n      } else {\n        update.imageUrl = \"No Image\"\n      }\n      if (projectType) {\n        update.type = projectType\n      } else {\n        update.type = \"Miscellaneous\"\n      }\n    \n      await authAxios.put(`/Projects`, add);\n\n      setOpenProjectEditPopup(false);\n\n    }\n    catch (err) {\n      console.log(err);\n      setMessage(err);\n\n    }\n\n  };\n\n  useEffect(() => {\n  }, [setOpenProjectAddPopup])\n\n\n\n  const classes = useStyles();\n  const test = e => {\n    e.preventDefault();\n  }\n\n\n  return (\n\n    <Dialog open={openProjectAddPopup}\n      fullWidth\n    >\n      <DialogTitle>\n        <div>\n          <Typography variant=\"h6\" component=\"div\">\n            Add\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <p style={{ color: 'red' }} id=\"Msg\" className={classes.center} >{errormsg}</p>\n        <form onSubmit={test} className={classes.form}>\n\n          <Typography\n            variant=\"h6\"\n            style={{ margin: '20px', marginLeft: '0px' }}\n          >\n            Add Project\n\n            </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Title\"\n            label=\"Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"Title\"\n          />\n              <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Link\"\n            label=\"Link\"\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            id=\"Link\"\n          />\n              <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Type\"\n            label=\"Type\"\n            value={projectType}\n            onChange={(e) => setProjectType(e.target.value)}\n            id=\"Type\"\n          />\n           <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"ImageUrl\"\n            label=\"ImageUrl\"\n            value={imageUrl}\n            onChange={(e) => setImageUrl(e.target.value)}\n            id=\"ImageUrl\"\n          />\n          <TextareaAutosize\n            style={{ minWidth: \"500px\", minHeight: \"100px\", marginTop: \"30px\", marginBottom: \"30px\" }}\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n            aria-label=\"minimum height\"\n            placeholder=\"Enter your Description\" />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => AddProject()}\n\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n\n        </form>\n      </DialogContent>\n\n\n      <DialogActions>\n        <Button onClick={() => setOpenProjectAddPopup(false)} color=\"primary\">\n          Close\n          </Button>\n\n      </DialogActions>\n    </Dialog >\n  )\n}"]},"metadata":{},"sourceType":"module"}