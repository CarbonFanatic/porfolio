{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\UI\\\\trydo\\\\src\\\\component\\\\Popups\\\\AddPopups\\\\AddSkillsPopup.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core';\nimport { API_ENDPOINT } from '../../../config';\nimport axios from 'axios';\nimport { TextareaAutosize } from '@material-ui/core';\nimport ObjectID from 'bson-objectid';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Popup(props) {\n  const {\n    openSkillAddPopup,\n    setOpenSkillAddPopup\n  } = props;\n  const [skillName, setskillName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const accessToken = localStorage.getItem('token');\n  const [errormsg, setMessage] = useState(\"\"); //Add WorkExperience Function\n\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  const AddSkill = async setMsg => {\n    try {\n      setMessage(\"\");\n      const objectId = new ObjectID();\n      const originalHex = objectId.toHexString();\n      const add = {\n        id: originalHex\n      };\n\n      if (description) {\n        add.description = description;\n      } else {\n        setMessage(\"Fill out all fields\");\n        return;\n      }\n\n      if (skillName) {\n        add.skillName = skillName;\n      } else {\n        setMessage(\"Fill out all fields\");\n        return;\n      }\n\n      await authAxios.post(`/Skill`, add);\n      setOpenSkillAddPopup(false);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n      setMessage(err);\n    }\n  };\n\n  const classes = useStyles();\n\n  const test = e => {\n    e.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Dialog, {\n      open: openSkillAddPopup,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Add\"))),\n    /*#__PURE__*/\n    React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      id: \"Msg\",\n      className: classes.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, errormsg),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: test,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: '20px',\n        marginLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Add a Skill entry\"),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Skill\",\n      label: \"Skill\",\n      value: skillName,\n      onChange: e => setskillName(e.target.value),\n      id: \"Skill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextareaAutosize, {\n      style: {\n        minWidth: \"500px\",\n        minHeight: \"100px\",\n        marginTop: \"30px\",\n        marginBottom: \"30px\"\n      },\n      onChange: e => setDescription(e.target.value),\n      value: description,\n      \"aria-label\": \"minimum height\",\n      placeholder: \"Enter your Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => AddSkill(),\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Add Entry\"))),\n    /*#__PURE__*/\n    React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      onClick: () => setOpenSkillAddPopup(false),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"Close\")))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\UI\\trydo\\src\\component\\Popups\\AddPopups\\AddSkillsPopup.js"],"names":["React","useState","useEffect","useRef","makeStyles","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","TextField","API_ENDPOINT","axios","TextareaAutosize","ObjectID","useStyles","theme","form","marginTop","spacing","Popup","props","openSkillAddPopup","setOpenSkillAddPopup","skillName","setskillName","description","setDescription","accessToken","localStorage","getItem","errormsg","setMessage","authAxios","create","baseURL","headers","Authorization","AddSkill","setMsg","objectId","originalHex","toHexString","add","id","post","window","location","reload","err","console","log","classes","test","e","preventDefault","color","center","margin","marginLeft","target","value","minWidth","minHeight","marginBottom","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core'\nimport { API_ENDPOINT } from '../../../config';\nimport axios from 'axios';\nimport { TextareaAutosize } from '@material-ui/core'\nimport ObjectID from 'bson-objectid'\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\nexport default function Popup(props) {\n\n  const {openSkillAddPopup, setOpenSkillAddPopup } = props\n  const [skillName, setskillName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const accessToken = localStorage.getItem('token');\n\n  const [errormsg, setMessage] = useState(\"\");\n  //Add WorkExperience Function\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n            Authorization: `Bearer ${accessToken}`\n\n        },\n\n  });\n  const AddSkill= async (setMsg) => {\n    try {\n      setMessage(\"\")\n      const objectId = new ObjectID();\n      const originalHex = objectId.toHexString();\n      const add = {\n        \n        id: originalHex,\n      };\n      \n      if (description) {\n        add.description = description\n      } else {\n        setMessage(\"Fill out all fields\")\n        return;      }\n      if (skillName) {\n        add.skillName = skillName\n      } else {\n        setMessage(\"Fill out all fields\")\n        return;\n      }\n    \n      await authAxios.post(`/Skill`, add);\n\n      setOpenSkillAddPopup(false);\n      window.location.reload();\n\n    }\n    catch (err) {\n      console.log(err);\n      setMessage(err);\n\n    }\n\n  };\n  const classes = useStyles();\n  const test = e => {\n    e.preventDefault();\n  }\n\n\n  return (\n\n    <Dialog open={openSkillAddPopup}\n      fullWidth\n    >\n      <DialogTitle>\n        <div>\n          <Typography variant=\"h6\" component=\"div\">\n            Add\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <p style={{ color: 'red' }} id=\"Msg\" className={classes.center} >{errormsg}</p>\n        <form onSubmit={test} className={classes.form}>\n\n          <Typography\n            variant=\"h6\"\n            style={{ margin: '20px', marginLeft: '0px' }}\n          >\n            Add a Skill entry\n\n            </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Skill\"\n            label=\"Skill\"\n            value= {skillName}\n            onChange={(e) => setskillName(e.target.value)}\n            id=\"Skill\"\n          />\n              \n          <TextareaAutosize\n            style={{ minWidth: \"500px\", minHeight: \"100px\", marginTop: \"30px\", marginBottom: \"30px\" }}\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n            aria-label=\"minimum height\"\n            placeholder=\"Enter your Description\" />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => AddSkill()}\n\n            className={classes.submit}\n          >\n            Add Entry\n          </Button>\n\n        </form>\n      </DialogContent>\n\n\n      <DialogActions>\n        <Button onClick={() => setOpenSkillAddPopup(false)} color=\"primary\">\n          Close\n          </Button>\n\n      </DialogActions>\n    </Dialog >\n  )\n}"]},"metadata":{},"sourceType":"module"}