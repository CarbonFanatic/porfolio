{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\UI\\\\trydo\\\\src\\\\component\\\\Popups\\\\EditProjectPopup.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core';\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\nimport { TextareaAutosize } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Popup(props) {\n  const {\n    openProjectEditPopup,\n    setOpenProjectEditPopup,\n    project\n  } = props;\n  const [title, setTitle] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [projectType, setProjectType] = useState(\"\");\n  const defaultTitle = project.title;\n  const defaultLink = project.link;\n  const defaultImageUrl = project.imageUrl;\n  const defaultProjectType = project.type;\n  const defaultDescription = project.description;\n  const [errormsg, setMessage] = useState(\"\"); //Edit WorkExperience Function\n\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  const EditProject = async setMsg => {\n    try {\n      const update = {\n        id: project.id\n      };\n\n      if (title) {\n        update.title = title;\n      } else {\n        update.title = defaultTitle;\n      }\n\n      if (description) {\n        update.description = description;\n      } else {\n        update.description = defaultDescription;\n      }\n\n      if (link) {\n        update.link = link;\n      } else {\n        update.link = defaultLink;\n      }\n\n      if (imageUrl) {\n        update.imageUrl = imageUrl;\n      } else {\n        update.imageUrl = defaultImageUrl;\n      }\n\n      if (projectType) {\n        update.type = projectType;\n      } else {\n        update.type = defaultProjectType;\n      }\n\n      await authAxios.put(`/Projects/${project.id}`, update);\n      setOpenProjectEditPopup(false);\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n      setMessage(err);\n    }\n  };\n\n  useEffect(() => {}, [setOpenProjectEditPopup]);\n  const classes = useStyles();\n\n  const test = e => {\n    e.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Dialog, {\n      open: openProjectEditPopup,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Edit\"))),\n    /*#__PURE__*/\n    React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      id: \"Msg\",\n      className: classes.center,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, errormsg),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: test,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: '20px',\n        marginLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Edit your Project\"),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Title\",\n      label: \"Title\",\n      defaultValue: defaultTitle,\n      onChange: e => setTitle(e.target.value),\n      id: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Link\",\n      label: \"Link\",\n      defaultValue: defaultLink,\n      onChange: e => setLink(e.target.value),\n      id: \"Link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Type\",\n      label: \"Type\",\n      defaultValue: defaultProjectType,\n      onChange: e => setProjectType(e.target.value),\n      id: \"Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"ImageUrl\",\n      label: \"ImageUrl\",\n      defaultValue: defaultImageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      id: \"ImageUrl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextareaAutosize, {\n      style: {\n        minWidth: \"500px\",\n        minHeight: \"100px\",\n        marginTop: \"30px\",\n        marginBottom: \"30px\"\n      },\n      onChange: e => setDescription(e.target.value),\n      defaultValue: defaultDescription,\n      \"aria-label\": \"minimum height\",\n      placeholder: \"Enter your Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => EditProject(),\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, \"Save changes\"))),\n    /*#__PURE__*/\n    React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      onClick: () => setOpenProjectEditPopup(false),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, \"Close\")))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\UI\\trydo\\src\\component\\Popups\\EditProjectPopup.js"],"names":["React","useState","useEffect","useRef","makeStyles","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","TextField","API_ENDPOINT","axios","TextareaAutosize","useStyles","theme","form","marginTop","spacing","Popup","props","openProjectEditPopup","setOpenProjectEditPopup","project","title","setTitle","link","setLink","description","setDescription","imageUrl","setImageUrl","projectType","setProjectType","defaultTitle","defaultLink","defaultImageUrl","defaultProjectType","type","defaultDescription","errormsg","setMessage","authAxios","create","baseURL","headers","Authorization","accessToken","EditProject","setMsg","update","id","put","window","location","reload","err","console","log","classes","test","e","preventDefault","color","center","margin","marginLeft","target","value","minWidth","minHeight","marginBottom","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core'\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\nimport { TextareaAutosize } from '@material-ui/core'\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\nexport default function Popup(props) {\n\n  const { openProjectEditPopup, setOpenProjectEditPopup, project} = props\n  const [title, setTitle] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [projectType, setProjectType] = useState(\"\");\n\n  const defaultTitle = project.title;\n  const defaultLink = project.link;\n  const defaultImageUrl = project.imageUrl;\n  const defaultProjectType = project.type;\n  const defaultDescription= project.description;\n\n  const [errormsg, setMessage] = useState(\"\");\n  //Edit WorkExperience Function\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n            Authorization: `Bearer ${accessToken}`\n\n        },\n\n  });\n  const EditProject= async (setMsg) => {\n    try {\n      const update = {\n        id: project.id,\n      };\n      if (title) {\n        update.title = title\n      } else {\n        update.title = defaultTitle\n      }\n      if (description) {\n        update.description = description\n      } else {\n        update.description = defaultDescription\n      }\n      if (link) {\n        update.link = link\n      } else {\n        update.link = defaultLink\n      }\n      if (imageUrl) {\n        update.imageUrl = imageUrl\n      } else {\n        update.imageUrl = defaultImageUrl\n      }\n      if (projectType) {\n        update.type = projectType\n      } else {\n        update.type = defaultProjectType\n      }\n    \n      await authAxios.put(`/Projects/${project.id}`, update);\n\n      setOpenProjectEditPopup(false);\n      window.location.reload();\n\n    }\n    catch (err) {\n      console.log(err);\n      setMessage(err);\n\n    }\n\n  };\n\n  useEffect(() => {\n  }, [setOpenProjectEditPopup])\n\n\n\n  const classes = useStyles();\n  const test = e => {\n    e.preventDefault();\n  }\n\n\n  return (\n\n    <Dialog open={openProjectEditPopup}\n      fullWidth\n    >\n      <DialogTitle>\n        <div>\n          <Typography variant=\"h6\" component=\"div\">\n            Edit\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <p style={{ color: 'red' }} id=\"Msg\" className={classes.center} >{errormsg}</p>\n        <form onSubmit={test} className={classes.form}>\n\n          <Typography\n            variant=\"h6\"\n            style={{ margin: '20px', marginLeft: '0px' }}\n          >\n            Edit your Project\n\n            </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Title\"\n            label=\"Title\"\n            defaultValue={defaultTitle}\n            onChange={(e) => setTitle(e.target.value)}\n            id=\"Title\"\n          />\n              <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Link\"\n            label=\"Link\"\n            defaultValue={defaultLink}\n            onChange={(e) => setLink(e.target.value)}\n            id=\"Link\"\n          />\n              <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Type\"\n            label=\"Type\"\n            defaultValue={defaultProjectType}\n            onChange={(e) => setProjectType(e.target.value)}\n            id=\"Type\"\n          />\n           <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"ImageUrl\"\n            label=\"ImageUrl\"\n            defaultValue={defaultImageUrl}\n            onChange={(e) => setImageUrl(e.target.value)}\n            id=\"ImageUrl\"\n          />\n          <TextareaAutosize\n            style={{ minWidth: \"500px\", minHeight: \"100px\", marginTop: \"30px\", marginBottom: \"30px\" }}\n            onChange={(e) => setDescription(e.target.value)}\n            defaultValue={defaultDescription}\n            aria-label=\"minimum height\"\n            placeholder=\"Enter your Description\" />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => EditProject()}\n\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n\n        </form>\n      </DialogContent>\n\n\n      <DialogActions>\n        <Button onClick={() => setOpenProjectEditPopup(false)} color=\"primary\">\n          Close\n          </Button>\n\n      </DialogActions>\n    </Dialog >\n  )\n}"]},"metadata":{},"sourceType":"module"}