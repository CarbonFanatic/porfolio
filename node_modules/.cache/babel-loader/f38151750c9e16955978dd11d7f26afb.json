{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\UI\\\\trydo\\\\src\\\\component\\\\Popups\\\\EditIntroPopup.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Popup(props) {\n  var objectId = new ObjectID();\n  var originalHex = objectId.toHexString();\n  console.log(originalHex);\n  const {\n    title,\n    openEPopup,\n    setOpenEPopup,\n    saveChanges,\n    children\n  } = props;\n  const errorP = useRef(null);\n  const [errormsg, setMessage] = useState(\"\");\n  useEffect(() => {\n    setMessage(\"\");\n  }, [props]);\n  useEffect(() => {\n    if (errormsg !== \"\") {\n      errorP.current.scrollIntoView();\n    }\n  }, [errormsg]);\n  const classes = useStyles();\n\n  const test = e => {\n    e.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Dialog, {\n      open: openEPopup,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, title))),\n    /*#__PURE__*/\n    React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      id: \"Msg\",\n      className: classes.center,\n      ref: errorP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, errormsg),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: test,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, children,\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => saveChanges(setMessage),\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Save changes\"))),\n    /*#__PURE__*/\n    React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      onClick: () => setOpenEPopup(false),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Close\")))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\UI\\trydo\\src\\component\\Popups\\EditIntroPopup.js"],"names":["React","useState","useEffect","useRef","makeStyles","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","useStyles","theme","form","marginTop","spacing","Popup","props","objectId","ObjectID","originalHex","toHexString","console","log","title","openEPopup","setOpenEPopup","saveChanges","children","errorP","errormsg","setMessage","current","scrollIntoView","classes","test","e","preventDefault","color","center","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography } from '@material-ui/core'\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\nexport default function Popup(props) {\n  var objectId = new ObjectID();\n                var originalHex = objectId.toHexString();\n                console.log(originalHex);\n  const { title, openEPopup, setOpenEPopup, saveChanges, children } = props\n\n  const errorP = useRef(null);\n  const [errormsg, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    setMessage(\"\")\n  }, [props])\n\n  useEffect(() => {\n    if (errormsg !== \"\") {\n      errorP.current.scrollIntoView();\n    }\n  }, [errormsg]);\n\n  \n  const classes = useStyles();\n  const test = e => {\n    e.preventDefault();\n  }\n\n\n  return (\n\n    <Dialog open={openEPopup}\n    fullWidth\n    >\n      <DialogTitle>\n        <div>\n          <Typography variant=\"h6\" component=\"div\">\n            {title}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n      <p style={{ color: 'red' }} id=\"Msg\" className={classes.center} ref={errorP}>{errormsg}</p>\n        <form onSubmit={test} className={classes.form}>\n\n          {children}\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => saveChanges(setMessage)}\n\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n\n        </form>\n      </DialogContent>\n\n\n      <DialogActions>\n        <Button onClick={() => setOpenEPopup(false)} color=\"primary\">\n          Close\n          </Button>\n\n      </DialogActions>\n    </Dialog>\n  )\n}"]},"metadata":{},"sourceType":"module"}