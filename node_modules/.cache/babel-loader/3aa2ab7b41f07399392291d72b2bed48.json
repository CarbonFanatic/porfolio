{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\UI\\\\trydo\\\\src\\\\component\\\\Popups\\\\EditIntroPopup.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography } from '@material-ui/core';\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Popup(props) {\n  const {\n    openIntroEditPopup,\n    setOpenIntroEditPopup\n  } = props;\n  const errorP = useRef(null);\n  const [errormsg, setMessage] = useState(\"\"); //Edit Intro Function\n\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {}\n  });\n\n  const EditIntro = async setMsg => {\n    try {\n      // await authAxios.put(`/Introduction/${introduction.id}`, {\n      //     id: introduction.id,\n      //     title: customerId,\n      //     location:\"\",\n      //     myRoles:[]\n      // });\n      setOpenIntroEditPopup(false);\n      setMessage(\"Project has successfully been edited.\");\n    } catch (err) {\n      setMsg(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    setMessage(\"\");\n  }, [props]);\n  useEffect(() => {\n    if (errormsg !== \"\") {\n      errorP.current.scrollIntoView();\n    }\n  }, [errormsg]);\n  const classes = useStyles();\n\n  const test = e => {\n    e.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Dialog, {\n      open: openIntroEditPopup,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Test\"))),\n    /*#__PURE__*/\n    React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      id: \"Msg\",\n      className: classes.center,\n      ref: errorP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, errormsg),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: test,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: '20px',\n        marginLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Project ID: test\"),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"ProjectPO\",\n      label: \"Project PO\" // value={projectPo}\n      // onChange={(e) => setProjectPo(e.target.value)}\n      ,\n      id: \"ProjectPO\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => EditIntro(),\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Save changes\"))),\n    /*#__PURE__*/\n    React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      onClick: () => setOpenEPopup(false),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Close\")))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\UI\\trydo\\src\\component\\Popups\\EditIntroPopup.js"],"names":["React","useState","useEffect","useRef","makeStyles","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","API_ENDPOINT","axios","useStyles","theme","form","marginTop","spacing","Popup","props","openIntroEditPopup","setOpenIntroEditPopup","errorP","errormsg","setMessage","authAxios","create","baseURL","headers","EditIntro","setMsg","err","getError","current","scrollIntoView","classes","test","e","preventDefault","color","center","margin","marginLeft","submit","setOpenEPopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,WAAhC,EAA6CC,aAA7C,EAA4DC,MAA5D,EAAoEC,UAApE,QAAsF,mBAAtF;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADP;AADiC,CAAZ,CAAD,CAA5B;AAOA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEnC,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAgDF,KAAtD;AAEA,QAAMG,MAAM,GAAGnB,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACoB,QAAD,EAAWC,UAAX,IAAyBvB,QAAQ,CAAC,EAAD,CAAvC,CALmC,CAMlC;;AACA,QAAMwB,SAAS,GAAGb,KAAK,CAACc,MAAN,CAAa;AAC9BC,IAAAA,OAAO,EAAEhB,YADqB;AAE9BiB,IAAAA,OAAO,EAAE;AAFqB,GAAb,CAAlB;;AAMA,QAAMC,SAAS,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAI;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AAEAG,MAAAA,UAAU,CAAC,uCAAD,CAAV;AAGH,KAZD,CAaA,OAAOO,GAAP,EAAY;AACRD,MAAAA,MAAM,CAACE,QAAQ,CAACD,GAAD,CAAT,CAAN;AAEH;AAEJ,GAnBE;;AAqBD7B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAFQ,EAEN,CAACL,KAAD,CAFM,CAAT;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,QAAQ,KAAK,EAAjB,EAAqB;AACnBD,MAAAA,MAAM,CAACW,OAAP,CAAeC,cAAf;AACD;AACF,GAJQ,EAIN,CAACX,QAAD,CAJM,CAAT;AAOA,QAAMY,OAAO,GAAGtB,SAAS,EAAzB;;AACA,QAAMuB,IAAI,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAKA;AAAA;AAEE,wBAAC,MAAD;AAAQ,MAAA,IAAI,EAAElB,kBAAd;AACA,MAAA,SAAS,MADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGE,wBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CAHF;AAAA;AAUE,wBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAG,MAAA,KAAK,EAAE;AAAEmB,QAAAA,KAAK,EAAE;AAAT,OAAV;AAA4B,MAAA,EAAE,EAAC,KAA/B;AAAqC,MAAA,SAAS,EAAEJ,OAAO,CAACK,MAAxD;AAAgE,MAAA,GAAG,EAAElB,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8EC,QAA9E,CADA;AAAA;AAEE;AAAM,MAAA,QAAQ,EAAEa,IAAhB;AAAsB,MAAA,SAAS,EAAED,OAAO,CAACpB,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,wBAAC,UAAD;AACI,MAAA,OAAO,EAAC,IADZ;AAEI,MAAA,KAAK,EAAE;AAAC0B,QAAAA,MAAM,EAAC,MAAR;AAAeC,QAAAA,UAAU,EAAC;AAA1B,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA;AAAA;AASI,wBAAC,SAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,MAAM,EAAC,QAFX;AAGI,MAAA,QAAQ,MAHZ;AAII,MAAA,SAAS,MAJb;AAKI,MAAA,IAAI,EAAC,WALT;AAMI,MAAA,KAAK,EAAC,YANV,CAOI;AACA;AARJ;AASI,MAAA,EAAE,EAAC,WATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ;AAAA;AAoBE,wBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,OAAO,EAAE,MAAMb,SAAS,EAL1B;AAOE,MAAA,SAAS,EAAEM,OAAO,CAACQ,MAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,CAFF,CAVF;AAAA;AAgDE,wBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAApC;AAA6C,MAAA,KAAK,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAhDF;AAFF;AA0DD","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography } from '@material-ui/core'\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\nexport default function Popup(props) {\n  \n  const { openIntroEditPopup, setOpenIntroEditPopup } = props\n\n  const errorP = useRef(null);\n  const [errormsg, setMessage] = useState(\"\");\n   //Edit Intro Function\n   const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n    },\n\n});\n   const EditIntro = async (setMsg) => {\n    try {\n        // await authAxios.put(`/Introduction/${introduction.id}`, {\n        //     id: introduction.id,\n        //     title: customerId,\n        //     location:\"\",\n        //     myRoles:[]\n        // });\n        setOpenIntroEditPopup(false);\n\n        setMessage(\"Project has successfully been edited.\");\n       \n\n    }\n    catch (err) {\n        setMsg(getError(err));\n\n    }\n\n};\n\n  useEffect(() => {\n    setMessage(\"\")\n  }, [props])\n\n  useEffect(() => {\n    if (errormsg !== \"\") {\n      errorP.current.scrollIntoView();\n    }\n  }, [errormsg]);\n\n  \n  const classes = useStyles();\n  const test = e => {\n    e.preventDefault();\n  }\n\n\n  return (\n\n    <Dialog open={openIntroEditPopup}\n    fullWidth\n    >\n      <DialogTitle>\n        <div>\n          <Typography variant=\"h6\" component=\"div\">\n            Test\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n      <p style={{ color: 'red' }} id=\"Msg\" className={classes.center} ref={errorP}>{errormsg}</p>\n        <form onSubmit={test} className={classes.form}>\n\n        <Typography\n            variant=\"h6\" \n            style={{margin:'20px',marginLeft:'0px'}}\n            >\n                  Project ID: test \n\n            </Typography>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"ProjectPO\"\n                label=\"Project PO\"\n                // value={projectPo}\n                // onChange={(e) => setProjectPo(e.target.value)}\n                id=\"ProjectPO\"\n            />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => EditIntro()}\n\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n\n        </form>\n      </DialogContent>\n\n\n      <DialogActions>\n        <Button onClick={() => setOpenEPopup(false)} color=\"primary\">\n          Close\n          </Button>\n\n      </DialogActions>\n    </Dialog>\n  )\n}"]},"metadata":{},"sourceType":"module"}