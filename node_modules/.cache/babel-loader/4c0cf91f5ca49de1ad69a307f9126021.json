{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\UI\\\\trydo\\\\src\\\\component\\\\Popups\\\\EditIntroPopup.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography, TextField } from '@material-ui/core';\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(1)\n  }\n}));\nexport default function Popup(props) {\n  const {\n    openIntroEditPopup,\n    setOpenIntroEditPopup,\n    introduction\n  } = props;\n  const [introMessage, setIntroMessage] = useState(\"\");\n  const [roles, setRoles] = useState();\n  const [basedIn, setBasedIn] = useState(\"\");\n  const defaultTitle = introduction.title;\n  const defaultRolesArray = introduction.myRoles;\n  const defaultBasedIn = introduction.location;\n  const errorP = useRef(null);\n  const [errormsg, setMessage] = useState(\"\"); //Edit Intro Function\n\n  const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n\n  const EditIntro = async setMsg => {\n    try {\n      const update = {\n        id: introduction.id\n      };\n\n      if (basedIn) {\n        update.location = basedIn;\n      } else {\n        update.location = defaultBasedIn;\n      }\n\n      if (introMessage) {\n        update.title = introMessage;\n      } else {\n        update.title = defaultTitle;\n      }\n\n      if (roles) {\n        update.myRoles = roles;\n      } else {\n        update.myRoles = defaultRolesArray;\n      }\n\n      await authAxios.put(`/Introduction/${introduction.id}`, update);\n      setOpenIntroEditPopup(false);\n      window.location.reload();\n      setMessage(\"Project has successfully been edited.\");\n    } catch (err) {\n      console.log(err);\n      setMessage(err);\n    }\n  };\n\n  useEffect(() => {\n    setMessage(\"\");\n  }, [props]);\n  useEffect(() => {\n    if (errormsg !== \"\") {\n      errorP.current.scrollIntoView();\n    }\n  }, [errormsg]);\n  const classes = useStyles();\n\n  const test = e => {\n    e.preventDefault();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Dialog, {\n      open: openIntroEditPopup,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Edit\"))),\n    /*#__PURE__*/\n    React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      id: \"Msg\",\n      className: classes.center,\n      ref: errorP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, errormsg),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      onSubmit: test,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        margin: '20px',\n        marginLeft: '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Edit Your Introduction\"),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Intro\",\n      label: \"Intro\",\n      defaultValue: defaultTitle,\n      onChange: e => setIntroMessage(e.target.value),\n      id: \"Intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"Roles\",\n      label: \"Roles\",\n      defaultValue: defaultRolesArray,\n      onChange: e => setRoles(e.target.value.split(',')),\n      id: \"Roles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"BasedIn\",\n      label: \"BasedIn\",\n      defaultValue: defaultBasedIn,\n      onChange: e => setBasedIn(e.target.value),\n      id: \"BasedIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => EditIntro(),\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"Save changes\"))),\n    /*#__PURE__*/\n    React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Button, {\n      onClick: () => setOpenIntroEditPopup(false),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, \"Close\")))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\chris\\Desktop\\UI\\trydo\\src\\component\\Popups\\EditIntroPopup.js"],"names":["React","useState","useEffect","useRef","makeStyles","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","TextField","API_ENDPOINT","axios","useStyles","theme","form","marginTop","spacing","Popup","props","openIntroEditPopup","setOpenIntroEditPopup","introduction","introMessage","setIntroMessage","roles","setRoles","basedIn","setBasedIn","defaultTitle","title","defaultRolesArray","myRoles","defaultBasedIn","location","errorP","errormsg","setMessage","authAxios","create","baseURL","headers","Authorization","accessToken","EditIntro","setMsg","update","id","put","window","reload","err","console","log","current","scrollIntoView","classes","test","e","preventDefault","color","center","margin","marginLeft","target","value","split","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, Typography,TextField } from '@material-ui/core'\nimport { API_ENDPOINT } from '../../config';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\nexport default function Popup(props) {\n  \n  const { openIntroEditPopup, setOpenIntroEditPopup,introduction } = props\n  const [introMessage,setIntroMessage]=useState(\"\");\n  const [roles,setRoles]=useState();\n  const [basedIn,setBasedIn]=useState(\"\");\n  \n  const defaultTitle = introduction.title;\n  const defaultRolesArray = introduction.myRoles;\n\n  const defaultBasedIn = introduction.location;\n\n  const errorP = useRef(null);\n  const [errormsg, setMessage] = useState(\"\");\n   //Edit Intro Function\n   const authAxios = axios.create({\n    baseURL: API_ENDPOINT,\n    headers: {\n            Authorization: `Bearer ${accessToken}`\n\n        },\n\n});\n   const EditIntro = async (setMsg) => {\n    try {\n      const update ={\n        id: introduction.id,\n      } ; \n      if (basedIn){\n        update.location = basedIn\n      } else{\n        update.location = defaultBasedIn\n      }\n      \n      if (introMessage){\n        update.title = introMessage\n      } else{\n        update.title = defaultTitle\n      }\n      if (roles){\n        update.myRoles = roles\n      } else{\n        update.myRoles = defaultRolesArray\n      }\n    \n        await authAxios.put(`/Introduction/${introduction.id}`,update);\n\n        setOpenIntroEditPopup(false);\n        window.location.reload();\n\n        setMessage(\"Project has successfully been edited.\");\n       \n\n    }\n    catch (err) {\n      console.log(err);\n      setMessage(err);\n\n    }\n\n};\n\n  useEffect(() => {\n    setMessage(\"\")\n  }, [props])\n\n  useEffect(() => {\n    if (errormsg !== \"\") {\n      errorP.current.scrollIntoView();\n    }\n  }, [errormsg]);\n\n  \n  const classes = useStyles();\n  const test = e => {\n    e.preventDefault();\n  }\n\n\n  return (\n\n    <Dialog open={openIntroEditPopup}\n    fullWidth\n    >\n      <DialogTitle>\n        <div>\n          <Typography variant=\"h6\" component=\"div\">\n            Edit\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n      <p style={{ color: 'red' }} id=\"Msg\" className={classes.center} ref={errorP}>{errormsg}</p>\n        <form onSubmit={test} className={classes.form}>\n\n        <Typography\n            variant=\"h6\" \n            style={{margin:'20px',marginLeft:'0px'}}\n            >\n                  Edit Your Introduction\n\n            </Typography>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"Intro\"\n                label=\"Intro\"\n                defaultValue={defaultTitle}\n                onChange={(e) => setIntroMessage(e.target.value)}\n                id=\"Intro\"\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"Roles\"\n                label=\"Roles\"\n                defaultValue={defaultRolesArray}\n                onChange={(e) => setRoles(e.target.value.split(','))}\n                id=\"Roles\"\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"BasedIn\"\n                label=\"BasedIn\"\n                defaultValue={defaultBasedIn}\n                onChange={(e) => setBasedIn(e.target.value)}\n                id=\"BasedIn\"\n            />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => EditIntro()}\n\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n\n        </form>\n      </DialogContent>\n\n\n      <DialogActions>\n        <Button onClick={() => setOpenIntroEditPopup(false)} color=\"primary\">\n          Close\n          </Button>\n\n      </DialogActions>\n    </Dialog>\n  )\n}"]},"metadata":{},"sourceType":"module"}